<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.vo.Order"><!-- 구별해주는 이름일 뿐이다 -->
<resultMap id="orderResultMap" type="OrderInfo" autoMapping="true">
  <id property="order_no" column="order_no" />
  <!-- ★★★One의 입장에서 Many를 가지는 관계★★★  -->
  <collection property="orderLines" ofType="OrderLine" autoMapping="true">
    <!-- <id property="order_no" column="order_no"/>  -->
    <!-- 윗줄 주석처리한 이유: 상세정보이므로 주문정보(주문번호)의 중복을 피하면 안된다 -->
    <!-- property값이 다르면 OrderLine타입의 새객체를 생성, id태그가 없으면 무조건 새객체 생성 -->
    <!-- property값이 같으면 OrderLine타입의 기존객체를 사용 -->
    <!-- ★★★Many의 입장에서 One을 가지는 관계★★★  -->
    <association property="product" javaType="com.my.vo.Product" autoMapping="true">
    <result property="prod_no" column="order_prod_no"/>
    </association>
  </collection>
</resultMap>
  <select id="selectById" parameterType="String" resultMap="orderResultMap">
  	SELECT info.order_no, info.order_time,
  		   line.order_prod_no, line.order_quantity,
  		   p.prod_name, p.prod_price
    FROM order_info info JOIN order_line line ON info.order_no = line.order_no
    					 JOIN product p ON p.prod_no = line.order_prod_no
    WHERE order_id=#{id}
  </select>
  
  <!-- 주문기본 -->
  <insert id="insertOrderInfo" parameterType="String">
  INSERT INTO order_info(order_no, order_id, order_time)
  VALUES (order_seq.NEXTVAL, #{order_id}, SYSTIMESTAMP)
  </insert>
  
  <!-- 주문상세 -->
  <insert id="insertOrderLine" parameterType="OrderLine">
  INSERT INTO order_line(order_no, order_prod_no, order_quantity)
  VALUES (order_seq.CURRVAL, #{product.prod_no}, #{order_quantity})
  </insert>
</mapper>
